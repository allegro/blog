{"version": 2, "width": 129, "height": 50, "timestamp": 1725956383, "env": {"SHELL": "/bin/zsh", "TERM": "xterm-256color"}}
[0.561545, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                \r \r"]
[0.562459, "o", "\u001b]2;aleksandr.serbin@polpc13015:~/ws/opbox-core\u0007\u001b]1;~/ws/opbox-core\u0007"]
[0.564436, "o", "\u001b]7;file://polpc13015/Users/aleksandr.serbin/ws/opbox-core\u001b\\"]
[0.565282, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32m➜  \u001b[36mopbox-core\u001b[00m \u001b[K\u001b[103C[10:19:44] \u001b[114D"]
[0.565441, "o", "\u001b[?1h\u001b="]
[0.565509, "o", "\u001b[?2004h"]
[0.658407, "o", "\r\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32m➜  \u001b[36mopbox-core\u001b[00m \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33m✗\u001b[00m \u001b[K\u001b[88C[10:19:44] \u001b[99D"]
[1.000812, "o", "g"]
[1.081744, "o", "\bgi"]
[1.157906, "o", "t"]
[1.277454, "o", " "]
[1.44949, "o", "s"]
[1.552435, "o", "t"]
[1.677611, "o", "a"]
[1.753271, "o", "t"]
[1.859669, "o", "u"]
[1.95938, "o", "s"]
[2.158345, "o", "\u001b[?1l\u001b>"]
[2.158541, "o", "\u001b[?2004l"]
[2.158661, "o", "\r\r\n"]
[2.160304, "o", "\u001b]2;git status\u0007\u001b]1;git\u0007"]
[2.202705, "o", "On branch master\r\n"]
[2.202882, "o", "Untracked files:\r\n  (use \"git add <file>...\" to include in what will be committed)\r\n\t\u001b[31mdemo.cast\u001b[m\r\n\r\nnothing added to commit but untracked files present (use \"git add\" to track)\r\n"]
[2.203274, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                \r \r"]
[2.204153, "o", "\u001b]2;aleksandr.serbin@polpc13015:~/ws/opbox-core\u0007"]
[2.204199, "o", "\u001b]1;~/ws/opbox-core\u0007"]
[2.206628, "o", "\u001b]7;file://polpc13015/Users/aleksandr.serbin/ws/opbox-core\u001b\\"]
[2.210949, "o", "\u001b[1A\u001b[123C /0,0s\r\n"]
[2.211906, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32m➜  \u001b[36mopbox-core\u001b[00m \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33m✗\u001b[00m "]
[2.211988, "o", "\u001b[K\u001b[88C[10:19:46] \u001b[99D"]
[2.212042, "o", "\u001b[?1h\u001b="]
[2.21211, "o", "\u001b[?2004h"]
[2.946124, "o", "a"]
[3.133028, "o", "\bal"]
[3.247923, "o", "l"]
[3.365376, "o", "e"]
[3.539964, "o", "g"]
[3.629261, "o", "r"]
[3.750309, "o", "o"]
[3.97084, "o", "-"]
[4.141417, "o", "r"]
[4.332647, "o", "e"]
[4.710449, "o", "w"]
[4.939495, "o", "r"]
[5.162089, "o", "i"]
[5.229509, "o", "t"]
[5.304947, "o", "e"]
[5.531541, "o", " "]
[5.927749, "o", "--log-level=INFO run --recipe pl.allegro.tech.autoupgrades.recipes.AndamioUpgrade8\u001b[K\r\r\n\u001b[K\u001b[A\u001b[127C"]
[5.938039, "o", "\u001b[82D\u001b[K\u001b[72C[10:19:46] \u001b[1B\r\u001b[K\u001b[A\u001b[45C"]
[6.41695, "o", "--log-level=INFO run --recipe pl.allegro.tech.autoupgrades.recipes.AndamioUpgrade8\u001b[K\u001b[1B\r\u001b[K\u001b[A\u001b[127C"]
[7.316549, "o", "\u001b[1B\r\u001b[K\u001b[A\u001b[127C"]
[7.317013, "o", "\u001b[?1l\u001b>"]
[7.317088, "o", "\u001b[?2004l"]
[7.317303, "o", "\u001b[1B\r\r\n"]
[7.319493, "o", "\u001b]2;allegro-rewrite --log-level=INFO run --recipe \u0007\u001b]1;allegro-rewrite\u0007"]
[8.319493, "o", "10:19:53.065 [main] INFO pl.allegro.tech.autoupgrades.runner.cli.GitManagedInputFilesProvider -- Found 1147 input files\r\n"]
[8.319702000000001, "o", "10:19:53.067 [main] INFO pl.allegro.tech.autoupgrades.runner.cli.ClasspathScanningRecipeInstantiator -- Activating recipe pl.allegro.tech.autoupgrades.recipes.AndamioUpgrade8\r\n"]
[9.319702000000001, "o", "10:19:54.815 [main] INFO pl.allegro.tech.autoupgrades.runner.cli.DelegatingSourceFilesParser -- Parsing 290 files with KotlinParser: [kts, kt]\r\n"]
[10.319702000000001, "o", "10:20:00.839 [main] INFO pl.allegro.tech.autoupgrades.runner.cli.DelegatingSourceFilesParser -- Parsing 328 files with GroovyParser: [groovy]\r\n"]
[12.319702000000001, "o", "10:20:25.098 [main] INFO pl.allegro.tech.autoupgrades.runner.cli.DelegatingSourceFilesParser -- Parsing 415 files with Java21Parser: [java]\r\n"]
[13.319702000000001, "o", "10:20:27.609 [main] INFO pl.allegro.tech.autoupgrades.runner.cli.DelegatingSourceFilesParser -- Parsing 33 files with YamlParser: [yml, yaml]\r\n"]
[13.439675000000003, "o", "10:20:27.729 [main] INFO pl.allegro.tech.autoupgrades.runner.cli.DelegatingSourceFilesParser -- Parsing 2 files with PropertiesParser: [properties]\r\n"]
[13.462358000000004, "o", "10:20:27.751 [main] INFO pl.allegro.tech.autoupgrades.runner.cli.DelegatingSourceFilesParser -- Parsing 10 files with PlainTextParser: [, md, gitignore, factories, txt, toml, bat]\r\n"]
[13.467355, "o", "10:20:27.756 [main] INFO pl.allegro.tech.autoupgrades.runner.cli.DelegatingSourceFilesParser -- Parsing 69 files with QuarkParser: [editorconfig, gitkeep, json, xml, deprecated, jar]\r\n"]
[13.470495000000001, "o", "10:20:27.759 [main] INFO pl.allegro.tech.autoupgrades.runner.cli.CommandLineAutoUpgradeRunner -- Running recipe\r\n"]
[15.470495000000001, "o", "10:20:49.617 [main] INFO pl.allegro.tech.autoupgrades.runner.cli.CommandLineAutoUpgradeRunner -- Run finished with 25 files modified and 1 files deleted\r\n"]
[15.504501000000007, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                \r \r"]
[15.505330000000002, "o", "\u001b]2;aleksandr.serbin@polpc13015:~/ws/opbox-core\u0007\u001b]1;~/ws/opbox-core\u0007"]
[15.507362000000002, "o", "\u001b]7;file://polpc13015/Users/aleksandr.serbin/ws/opbox-core\u001b\\"]
[15.510756000000002, "o", "\u001b[1A\u001b[120C /1m-1,6s\r\n"]
[15.511613999999996, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32m➜  \u001b[36mopbox-core\u001b[00m \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33m✗\u001b[00m "]
[15.511635, "o", "\u001b[K\u001b[88C[10:20:49] \u001b[99D"]
[15.511702999999999, "o", "\u001b[?1h\u001b="]
[15.511740000000005, "o", "\u001b[?2004h"]
[16.511740000000003, "o", "g"]
[16.593968000000004, "o", "\bgi"]
[16.762578000000005, "o", "t"]
[16.948059, "o", " "]
[17.101740000000007, "o", "s"]
[17.193920000000006, "o", "t"]
[17.304972000000006, "o", "a"]
[17.40600400000001, "o", "t"]
[17.54660600000001, "o", "u"]
[17.67178600000001, "o", "s"]
[17.956990000000005, "o", "\u001b[?1l\u001b>"]
[17.957243000000005, "o", "\u001b[?2004l\r\r\n"]
[17.96112500000001, "o", "\u001b]2;git status\u0007\u001b]1;git\u0007"]
[18.003375000000005, "o", "On branch master\r\n"]
[18.003476000000006, "o", "Changes not staged for commit:\r\n  (use \"git add/rm <file>...\" to update what will be committed)\r\n  (use \"git restore <file>...\" to discard changes in working directory)\r\n\t\u001b[31mmodified:   core/src/integration/groovy/pl/allegro/opbox/core/domain/parameter/expression/UserTraitFunctionIntegrationSpec.groovy\u001b[m\r\n\t\u001b[31mmodified:   core/src/integration/groovy/pl/allegro/opbox/core/domain/render/UserContextIntegrationSpec.groovy\u001b[m\r\n\t\u001b[31mmodified:   core/src/integration/groovy/pl/allegro/opbox/core/infrastructure/scoring/RestScoringProviderIntegrationSpec.groovy\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/java/pl/allegro/opbox/core/domain/render/RequestContextFactory.java\u001b[m\r\n"]
[18.003569, "o", "\t\u001b[31mmodified:   core/src/main/java/pl/allegro/opbox/core/domain/render/UserContextFactory.kt\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/java/pl/allegro/opbox/core/util/context/CmuIdContextItemValidator.kt\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/java/pl/allegro/opbox/core/util/context/DeviceClassContextItemValidator.kt\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/java/pl/allegro/opbox/core/util/context/RequestContextContainer.kt\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/java/pl/allegro/opbox/core/util/context/UserInternalContextItemValidator.kt\u001b[m\r\n"]
[18.003640000000004, "o", "\t\u001b[31mmodified:   core/src/main/resources/application-canary.yml\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/resources/application-canary0.yml\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/resources/application-integration.yml\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/resources/application-local.yml\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/resources/application-prod.yml\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/resources/application-test.yml\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/resources/application.yml\u001b[m\r\n\t\u001b[31mmodified:   core/src/main/resources/bootstrap.yml\u001b[m\r\n\t\u001b[31mmodified:   core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/DeviceFunctionSpec.groovy\u001b[m\r\n\t\u001b[31mmodified:   core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/IsInternalFunctionSpec.groovy\u001b[m\r\n\t\u001b[31mmodified:   core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/IsRwdFunctionSpec.groovy\u001b[m\r\n"]
[18.003718000000006, "o", "\t\u001b[31mmodified:   core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/UserCmIdFunctionSpec.groovy\u001b[m\r\n\t\u001b[31mmodified:   core/src/test/groovy/pl/allegro/opbox/core/domain/render/RenderingTestUtils.groovy\u001b[m\r\n\t\u001b[31mmodified:   core/src/test/groovy/pl/allegro/opbox/core/util/context/CmuIdContextItemValidatorSpec.groovy\u001b[m\r\n\t\u001b[31mmodified:   core/src/test/groovy/pl/allegro/opbox/core/util/context/DeviceClassContextItemValidatorSpec.groovy\u001b[m\r\n\t\u001b[31mmodified:   core/src/test/groovy/pl/allegro/opbox/core/util/context/UserInternalContextItemValidatorSpec.groovy\u001b[m\r\n\t\u001b[31mdeleted:    project.properties\u001b[m\r\n\r\nUntracked files:\r\n  (use \"git add <file>...\" to include in what will be committed)\r\n\t\u001b[31mdemo.cast\u001b[m\r\n\r\n"]
[18.003768000000008, "o", "no changes added to commit (use \"git add\" and/or \"git commit -a\")\r\n"]
[18.004259000000005, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                \r \r"]
[18.005194000000003, "o", "\u001b]2;aleksandr.serbin@polpc13015:~/ws/opbox-core\u0007"]
[18.005249000000006, "o", "\u001b]1;~/ws/opbox-core\u0007"]
[18.007846, "o", "\u001b]7;file://polpc13015/Users/aleksandr.serbin/ws/opbox-core\u001b\\"]
[18.011792, "o", "\u001b[1A\u001b[123C /0,0s\r\n"]
[18.01283500000001, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32m➜  \u001b[36mopbox-core\u001b[00m \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33m✗\u001b[00m "]
[18.012884, "o", "\u001b[K\u001b[88C[10:20:53] \u001b[99D"]
[18.012990000000002, "o", "\u001b[?1h\u001b="]
[18.013034000000005, "o", "\u001b[?2004h"]
[19.013034000000005, "o", "g"]
[19.128605000000007, "o", "\bgi"]
[19.489040000000003, "o", "t"]
[19.715276000000003, "o", " "]
[19.817479000000006, "o", "d"]
[19.966732000000007, "o", "i"]
[20.047174, "o", "f"]
[20.187926000000004, "o", "f"]
[20.418937, "o", "\u001b[?1l\u001b>"]
[20.41900600000001, "o", "\u001b[?2004l\r\r\n"]
[20.422993000000005, "o", "\u001b]2;git diff\u0007\u001b]1;git\u0007"]
[20.472054999999997, "o", "\u001b[?1049h\u001b[?1h\u001b=\r"]
[20.486542999999998, "o", "\u001b[1mdiff --git a/core/src/integration/groovy/pl/allegro/opbox/core/domain/parameter/expression/UserTraitFunctionIntegrationSpec.groov\u001b[m \b\u001b[1my b/core/src/integration/groovy/pl/allegro/opbox/core/domain/parameter/expression/UserTraitFunctionIntegrationSpec.groovy\u001b[m\u001b[m\r\n\u001b[1mindex 1f6b03980..16b5b94dd 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/integration/groovy/pl/allegro/opbox/core/domain/parameter/expression/UserTraitFunctionIntegrationSpec.groovy\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/integration/groovy/pl/allegro/opbox/core/domain/parameter/expression/UserTraitFunctionIntegrationSpec.groovy\u001b[m\u001b[m\r\n\u001b[36m@@ -6,7 +6,7 @@\u001b[m \u001b[mimport org.springframework.beans.factory.annotation.Autowired\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.BaseRenderIntegrationSpec\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.infrastructure.user.TraitsService\u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextCmuIdContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.alleg"]
[20.486717, "o", "ro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n import static java.util.concurrent.CompletableFuture.completedFuture\u001b[m\u001b[m\r\n import static pl.allegro.opbox.core.util.test.ContextsTestUtils.emptyUserContext\u001b[m\u001b[m\r\n\u001b[36m@@ -43,7 +43,7 @@\u001b[m \u001b[mclass UserTraitFunctionIntegrationSpec extends BaseRenderIntegrationSpec {\u001b[m\u001b[m\r\n         def traitName = 'age'\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         when:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME, new ChiContextCmuIdContextItem.Factory().create(userCmId))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextCmuIdContextItem(userCmId))\u001b[m\u001b[m\r\n         def userContext = emptyUserContext(traitsService)\u001b[m\u001b[m\r\n         def function = new UserTraitFunction(renderingContext(requestContext(userContext)))\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -56,7 +56,7 @@\u001b[m \u001b[mclass UserTraitFunctionIntegrationSpec extends BaseRenderIntegrationSpec {\u001b[m\u001b[m\r\n         def userCmId = '112'\u001b[m\u001b[m"]
[20.486783000000003, "o", "\r\n         def traitName = 'age'\u001b[m\u001b[m\r\n         def traitValue = '18-25'\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME, new ChiContextCmuIdContextItem.Factory().create(userCmId))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextCmuIdContextItem(userCmId))\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         teachWireMockJson(\"/collections/user-profiles-gcp/${userCmId}\", \"\"\"\u001b[m\u001b[m\r\n                 {\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/integration/groovy/pl/allegro/opbox/core/domain/render/UserContextIntegrationSpec.groovy b/core/src/integra\u001b[m \b\u001b[1mtion/groovy/pl/allegro/opbox/core/domain/render/UserContextIntegrationSpec.groovy\u001b[m\u001b[m\r\n\u001b[1mindex 396c92077..57152cb9f 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/integration/groovy/pl/allegro/opbox/core/domain/render/UserContextIntegrationSpec.groovy\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/integration/groovy/pl/allegro/opbox/core/domain/render/UserContextIntegrationSpec.groovy\u001b[m\u001b[m\r\n\u001b[36m@@ -16,7 +16,7 @@\u001b[m \u001b[mimport pl.allegro.o"]
[20.486841, "o", "pbox.core.infrastructure.user.au"]
[20.486884000000003, "o", "thentication.session.SessionR\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.infrastructure.user.authentication.session.SessionService\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.infrastructure.user.authentication.token.UserTokenDecoder\u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextCmuIdContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n import java.time.Clock\u001b[m\u001b[m\r\n import java.time.Duration\u001b[m\u001b[m\r\n\u001b[36m@@ -182,6 +182,6 @@\u001b[m \u001b[mclass UserContextIntegrationSpec extends BaseRenderIntegrationSpec {\u001b[m\u001b[m\r\n     }\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n:\u001b[K"]
[21.486884000000003, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[21.487132000000003, "o", "\u001b[K~\b~\r\u001b[K"]
[21.487343999999993, "o", "     static void putUserInContext(String userCmId) {\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME, new ChiContextCmuIdContextItem.Factory().create(userCmId))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextCmuIdContextItem(userCmId))\u001b[m\u001b[m\r\n     }\u001b[m\u001b[m\r\n }\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/integration/groovy/pl/allegro/opbox/core/infrastructure/scoring/RestScoringProviderIntegrationSpec.groovy b\u001b[m \b\u001b[1m/core/src/integration/groovy/pl/allegro/opbox/core/infrastructure/scoring/RestScoringProviderIntegrationSpec.groovy\u001b[m\u001b[m\r\n\u001b[1mindex 60c330f0b..9d85df15f 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/integration/groovy/pl/allegro/opbox/core/infrastructure/scoring/RestScoringProviderIntegrationSpec.groovy\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/integration/groovy/pl/allegro/opbox/core/infrastructure/scoring/RestScoringProviderIntegrationSpec.groovy\u001b[m\u001b[m\r\n\u001b[36m@@ -20,9 +20,7 @@\u001b[m \u001b[mimport pl.allegro.opbox.core.domain.scoring.ScoringProvider\u001b[m\u001b[m\r\n"]
[21.487550999999996, "o", " import pl.allegro.opbox.core.domain.scoring.ScoringRequest\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.infrastructure.httpclient.RestClientProvider\u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextCmuIdContextItem\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextDeviceClassContextItem\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextOverrideContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n import spock.lang.Unroll\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n import java.time.Duration\u001b[m\u001b[m\r\n\u001b[36m@@ -80,8 +78,8 @@\u001b[m \u001b[mclass RestScoringProviderIntegrationSpec extends BaseRenderIntegrationSpec {\u001b[m\u001b[m\r\n         }, 'container', randomNodeId())\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         and:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextDeviceClassContextItem.NAME, new ChiContextDeviceClassConte"]
[21.48769, "o", "xtItem.Factory().creat"]
[21.487957999999992, "o", "e\u001b[m \b\u001b[31m('Desktop'))\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME, new ChiContextCmuIdContextItem.Factory().create('00000000-0\u001b[m \b\u001b[31m000-0000-0000-000000000000'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextDeviceClassContextItem('Desktop'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextCmuIdContextItem('00000000-0000-0000-0000-000000\u001b[m \b\u001b[32m\u001b[m\u001b[32m000000'))\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         and:\u001b[m\u001b[m\r\n         def boxesToScore = [\"firstBox\", \"secondBox\", \"thirdBox\"].stream().map({ it -> new BoxToScore(it, it + \"Node\") }).collect\u001b[m \b(Collectors.toList())\u001b[m\u001b[m\r\n\u001b[36m@@ -109,8 +107,8 @@\u001b[m \u001b[mclass RestScoringProviderIntegrationSpec extends BaseRenderIntegrationSpec {\u001b[m\u001b[m\r\n         }, 'container', randomNodeId())\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         and:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextDeviceClassContextItem.NAME, new ChiContextDeviceClassContext"]
[21.488158999999996, "o", "Item.Facto"]
[21.488242, "o", "ry().create\u001b[m \b\u001b[31m('Desktop'))\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME, new ChiContextCmuIdContextItem.Factory().create('00000000-0\u001b[m \b\u001b[31m000-0000-0000-000000000000'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextDeviceClassContextItem('Desktop'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextCmuIdContextItem('00000000-0000-0000-0000-000000\u001b[m \b\u001b[32m\u001b[m\u001b[32m000000'))\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         and:\u001b[m\u001b[m\r\n:\u001b[K"]
[22.006445, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[22.006472000000002, "o", "\u001b[K~\b~\r\u001b[K"]
[22.00669599999999, "o", "         def boxesToScore = [\"firstBox\", \"secondBox\", \"thirdBox\"].stream().map({ it -> new BoxToScore(it, it + \"Node\") }).collect\u001b[m \b(Collectors.toList())\u001b[m\u001b[m\r\n\u001b[36m@@ -156,8 +154,8 @@\u001b[m \u001b[mclass RestScoringProviderIntegrationSpec extends BaseRenderIntegrationSpec {\u001b[m\u001b[m\r\n         }, 'container', randomNodeId())\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         and:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextDeviceClassContextItem.NAME, new ChiContextDeviceClassContextItem.Factory().create\u001b[m \b\u001b[31m('Desktop'))\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME, new ChiContextCmuIdContextItem.Factory().create('00000000-0\u001b[m \b\u001b[31m000-0000-0000-000000000000'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextDeviceClassContextItem('Desktop'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextCmuIdContextItem('00000000-0000-0000-0000-000000\u001b[m \b\u001b[32m\u001b[m\u001b[32m000000'))\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n "]
[22.006754, "o", "        and:\u001b[m\u001b[m\r\n         def boxesToScore = [\"firstBox\", \"secondBox\", \"thirdBox\"].stream().map({ it -> new BoxToScore(it, it + \"Node\") }).collect\u001b[m \b(Collectors.toList())\u001b[m\u001b[m\r\n"]
[22.006804000000002, "o", "\u001b[36m@@ -179,8 +177,8 @@\u001b[m \u001b[mclass RestScoringProviderIntegrationSpec extends BaseRenderIntegrationSpec {\u001b[m\u001b[m\r\n         }, objectName, nodeId)\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         and:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextDeviceClassContextItem.NAME, new ChiContextDeviceClassContextItem.Factory().create\u001b[m \b\u001b[31m('Desktop'))\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME, new ChiContextCmuIdContextItem.Factory().create('00000000-0\u001b[m \b\u001b[31m000-0000-0000-000000000000'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextDeviceClassContextItem('Desktop'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextCmuIdContextItem('00000000-0000-0000-0000-000000\u001b[m \b\u001b[32m\u001b[m\u001b[32m000000'))\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         and:\u001b[m\u001b[m\r\n         def boxesToScore = [\"firstBox\", \"secondBox\", \"thirdBox\"].stream().map({ it -> new BoxToScore(it, it + \"Node\") }).collect\u001b[m \b(Collectors.toList"]
[22.006845, "o", "())\u001b[m\u001b[m"]
[22.006906999999998, "o", "\r\n\u001b[36m@@ -216,9 +214,9 @@\u001b[m \u001b[mclass RestScoringProviderIntegrationSpec extends BaseRenderIntegrationSpec {\u001b[m\u001b[m\r\n         }, \"container\", \"nodeId\")\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         and:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextDeviceClassContextItem.NAME, new ChiContextDeviceClassContextItem.Factory().create\u001b[m \b\u001b[31m('Phone'))\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME, new ChiContextCmuIdContextItem.Factory().create('00000000-0\u001b[m \b\u001b[31m000-0000-0000-000000000000'))\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextOverrideContextItem.NAME, new ChiContextOverrideContextItem.Factory().create(\"k:v\"\u001b[m \b\u001b[31m))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextDeviceClassContextItem('Phone'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME, new ChiContextCmuIdContextItem('00000000-0000-0000-0000-000000\u001b[m \b\u001b[32m\u001b[m\u001b[32m000000'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        Reque"]
[22.006958999999995, "o", "stContext"]
[22.006981999999994, "o", "Container.put(SimpleHeaderContextItem.NAME, new ChiContextOverrideContextItem(\"k:v\"))\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         and:\u001b[m\u001b[m\r\n         def boxesToScore = [\"firstBox\", \"secondBox\", \"thirdBox\"].stream().map({ it -> new BoxToScore(it, it + \"Node\") }).collect\u001b[m \b:\u001b[K"]
[22.64759099999999, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[22.647781999999992, "o", "\u001b[K~\b~\r\u001b[K"]
[22.647969000000003, "o", "(Collectors.toList())\u001b[m\u001b[m\r\n\u001b[36m@@ -229,9 +227,9 @@\u001b[m \u001b[mclass RestScoringProviderIntegrationSpec extends BaseRenderIntegrationSpec {\u001b[m\u001b[m\r\n         then:\u001b[m\u001b[m\r\n         WireMock.verify(WireMock.postRequestedFor(WireMock.urlEqualTo(\"/api/v2/scores\"))\u001b[m\u001b[m\r\n                 .withHeader(\"Content-Type\", equalTo(\"application/json\"))\u001b[m\u001b[m\r\n\u001b[31m-                .withHeader(ChiContextDeviceClassContextItem.HEADER, equalTo(\"Phone\"))\u001b[m\u001b[m\r\n\u001b[31m-                .withHeader(ChiContextCmuIdContextItem.HEADER, equalTo(\"00000000-0000-0000-0000-000000000000\"))\u001b[m\u001b[m\r\n\u001b[31m-                .withHeader(ChiContextOverrideContextItem.HEADER, equalTo(\"k:v\"))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                .withHeader(SimpleHeaderContextItem.HEADER, equalTo(\"Phone\"))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                .withHeader(SimpleHeaderContextItem.HEADER, equalTo(\"00000000-0000-0000-0000-000000000000\"))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                .withHeader(SimpleHeaderContextItem.HEADER, equalTo(\"k:v\"))\u001b[m\u001b[m\r\n                 .withRequestBody("]
[22.648085999999992, "o", "equalTo(Js"]
[22.648178, "o", "onOutput.toJson([pageRoute       : \"allegro.pl/dzial/moda\",\u001b[m\u001b[m\r\n                                                             objectIds       : [\"firstBoxNode\", \"secondBoxNode\", \"thirdBoxNode\"],\u001b[m\u001b[m\r\n                                                             objectNames     : [\"firstBox\", \"secondBox\", \"thirdBox\"],\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/java/pl/allegro/opbox/core/domain/render/RequestContextFactory.java b/core/src/main/java/pl/allegro/op\u001b[m \b\u001b[1mbox/core/domain/render/RequestContextFactory.java\u001b[m\u001b[m\r\n\u001b[1mindex 7773d432f..2e82c7a7a 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/java/pl/allegro/opbox/core/domain/render/RequestContextFactory.java\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/java/pl/allegro/opbox/core/domain/render/RequestContextFactory.java\u001b[m\u001b[m\r\n\u001b[36m@@ -16,8 +16,8 @@\u001b[m \u001b[mimport pl.allegro.opbox.core.infrastructure.config.AnonymisationConfiguration;\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.infrastructure.config.CachedPagesConfiguration;\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.infrastructure.dto.Page"]
[22.64822699999999, "o", "PreviewD"]
[22.648421, "o", "to;\u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer;\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextInternalIpContextItem;\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextOverrideContextItem;\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.HeaderNames;\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem;\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n import java.time.Clock;\u001b[m\u001b[m\r\n import java.util.ArrayList;\u001b[m\u001b[m\r\n\u001b[36m@@ -209,14 +209,14 @@\u001b[m \u001b[mpublic class RequestContextFactory {\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n     private static void fillAndamioContext(boolean userInternal, String chi) {\u001b[m\u001b[m\r\n         RequestContextContainer.put(\u001b[m\u001b[m\r\n\u001b[31m-                ChiContextInternalIpContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-                new ChiContextInternalIpContextItem.Factory().create(userInternal ? \"1\" : \"0\")\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                HeaderNames.INTERN"]
[22.648571000000004, "o", "AL_IP_HEADER,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                new SimpleHeaderContextItem(userInternal ? \"1\" : \"0\")\u001b[m\u001b[m\r\n         );\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         if (!Strings.isNullOrEmpty(chi)) {\u001b[m\u001b[m\r\n             RequestContextContainer.put(\u001b[m\u001b[m\r\n\u001b[31m-                    ChiContextOverrideContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-                    new ChiContextOverrideContextItem.Factory().create(chi)\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                    HeaderNames.CHI_OVERRIDE_HEADER,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                    new SimpleHeaderContextItem(chi)\u001b[m\u001b[m\r\n             );\u001b[m\u001b[m\r\n         }\u001b[m\u001b[m\r\n     }\u001b[m\u001b[m\r\n:\u001b[K"]
[23.275352999999996, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[23.275600999999995, "o", "\u001b[K~\b~\r\u001b[K"]
[23.275730999999993, "o", "\u001b[1mdiff --git a/core/src/main/java/pl/allegro/opbox/core/domain/render/UserContextFactory.kt b/core/src/main/java/pl/allegro/opbox/c\u001b[m \b\u001b[1more/domain/render/UserContextFactory.kt\u001b[m\u001b[m\r\n\u001b[1mindex c8e927435..81f4b7151 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/java/pl/allegro/opbox/core/domain/render/UserContextFactory.kt\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/java/pl/allegro/opbox/core/domain/render/UserContextFactory.kt\u001b[m\u001b[m\r\n\u001b[36m@@ -7,9 +7,7 @@\u001b[m \u001b[mimport pl.allegro.opbox.core.infrastructure.user.PreferencesRetrieverWithOverrid\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.infrastructure.user.TraitsProvider\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.infrastructure.user.authentication.AuthenticationProviderFactory\u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextCmuIdContextItem\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextInternalIpContextItem\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech"]
[23.275820999999993, "o", ".common.a"]
[23.276021999999998, "o", "ndamio.spring.core.chicontext.ChiContextOverrideContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.HeaderNames\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n class UserContextFactory(\u001b[m\u001b[m\r\n     private val experimentVariantProvider: ExperimentVariantProvider,\u001b[m\u001b[m\r\n\u001b[36m@@ -62,9 +60,9 @@\u001b[m \u001b[mclass UserContextFactory(\u001b[m\u001b[m\r\n     }\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n     fun createForAnonymousUser(): UserContext {\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.remove(ChiContextCmuIdContextItem.NAME)\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.remove(ChiContextOverrideContextItem.NAME)\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.remove(ChiContextInternalIpContextItem.NAME)\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.remove(HeaderNames.CMUID_HEADER)\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.remove(HeaderNames.CHI_OVERRIDE_HEADER)\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.remove(HeaderNames.INTERNAL_IP_HEADER)\u001b[m\u001b[m\r\n         return AnonymousUserContext(\u001b[m\u001b[m\r\n             experime"]
[23.276124999999993, "o", "ntVariantProvider,\u001b[m\u001b[m\r\n             preferencesRetriever\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/java/pl/allegro/opbox/core/util/context/CmuIdContextItemValidator.kt b/core/src/main/java/pl/allegro/o\u001b[m \b\u001b[1mpbox/core/util/context/CmuIdContextItemValidator.kt\u001b[m\u001b[m\r\n\u001b[1mindex 9b094fad2..3b0b40c1f 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/java/pl/allegro/opbox/core/util/context/CmuIdContextItemValidator.kt\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/java/pl/allegro/opbox/core/util/context/CmuIdContextItemValidator.kt\u001b[m\u001b[m\r\n\u001b[36m@@ -1,17 +1,18 @@\u001b[m\u001b[m\r\n package pl.allegro.opbox.core.util.context\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n import io.micrometer.core.instrument.MeterRegistry\u001b[m\u001b[m\r\n"]
[23.276252, "o", "\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextCmuIdContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.HeaderNames\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n class CmuIdContextItemValidator(meterRegistry: MeterRegistry) :\u001b[m\u001b[m\r\n\u001b[31m-    HeaderWithQueryFallbackContextItemValidator<ChiContextCmuIdContextItem>(meterRegistry) {\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    HeaderWithQueryFallbackContextItemValidator<SimpleHeaderContextItem>(meterRegistry) {\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n     override fun getQueryParameterName() = \"userCmId\"\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n     override fun getHeaderName() = \"X-Cmuid\"\u001b[m\u001b[m\r\n:\u001b[K"]
[23.916904000000002, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[23.917039000000003, "o", "\u001b[K~\b~\r\u001b[K"]
[23.917286000000004, "o", " \u001b[m\u001b[m\r\n     override fun getMetricName() = \"cmuid\"\u001b[m\u001b[m\r\n\u001b[31m-    override fun getContextItemName() = ChiContextCmuIdContextItem.NAME\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    override fun getContextItemName() = HeaderNames.CMUID_HEADER\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[31m-    override fun getContextItemClass() = ChiContextCmuIdContextItem::class.java\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    override fun getContextItemClass() = SimpleHeaderContextItem::class.java\u001b[m\u001b[m\r\n }\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/java/pl/allegro/opbox/core/util/context/DeviceClassContextItemValidator.kt b/core/src/main/java/pl/all\u001b[m \b\u001b[1megro/opbox/core/util/context/DeviceClassContextItemValidator.kt\u001b[m\u001b[m\r\n\u001b[1mindex fea45ae79..956f3928d 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/java/pl/allegro/opbox/core/util/context/DeviceClassContextItemValidator.kt\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/java/pl/allegro/opbox/core/util/context/DeviceClassContextItemValidator.kt\u001b[m\u001b[m\r\n\u001b[36m@@ -6,7 +6,9 @@\u001b[m \u001b[mimport org.springframework.http.HttpHeaders\u001b[m\u001b[m\r\n import pl.allegro.experiments.chi."]
[23.917424999999994, "o", "core.DeviceClassFactory\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.util.MetricUtil\u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextDeviceClassContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.HeaderNames\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[m\r\n import java.lang.invoke.MethodHandles\u001b[m\u001b[m\r\n import javax.servlet.http.HttpServletRequest\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -25,7 +27,7 @@\u001b[m \u001b[mclass DeviceClassContextItemValidator(\u001b[m\u001b[m\r\n                 .orElse(null)\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         val contextItem = RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-            .get(ChiContextDeviceClassContextItem.NAME, ChiContextDeviceClassContextItem::class.java)\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m            .get(HeaderNames.DEVICE_CLASS_HEADER, SimpleHeaderContextItem::class.java)\u001b[m\u001b[m\r\n             .map { it.value"]
[23.917575, "o", "() }\u001b[m\u001b[m\r\n             .or"]
[23.917768999999993, "o", "Else(null)\u001b[m\u001b[m\r\n         if (!deviceClassFromRequest.equals(contextItem, ignoreCase = true)) {\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/java/pl/allegro/opbox/core/util/context/RequestContextContainer.kt b/core/src/main/java/pl/allegro/opb\u001b[m \b\u001b[1mox/core/util/context/RequestContextContainer.kt\u001b[m\u001b[m\r\n\u001b[1mindex 0cbc6a451..4e7600d91 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/java/pl/allegro/opbox/core/util/context/RequestContextContainer.kt\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/java/pl/allegro/opbox/core/util/context/RequestContextContainer.kt\u001b[m\u001b[m\r\n\u001b[36m@@ -1,9 +1,9 @@\u001b[m\u001b[m\r\n package pl.allegro.opbox.core.util.context\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextCmuIdContextItem\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextDeviceClassContextItem\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextInternalIpContextItem\u001b[m\u001b[m\r\n\u001b["]
[23.917801999999995, "o", "32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.HeaderNames\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[m\r\n import java.util.*\u001b[m\u001b[m\r\n:\u001b[K"]
[24.562309999999997, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[24.562629, "o", "\u001b[K~\b~\r\u001b[K"]
[24.562945, "o", " \u001b[m\u001b[m\r\n class RequestContextContainerUtils {\u001b[m\u001b[m\r\n\u001b[36m@@ -11,27 +11,27 @@\u001b[m \u001b[mclass RequestContextContainerUtils {\u001b[m\u001b[m\r\n     companion object {\u001b[m\u001b[m\r\n         @JvmStatic\u001b[m\u001b[m\r\n         fun isInternalIp(): Boolean = RequestContextContainer.get(\u001b[m\u001b[m\r\n\u001b[31m-            ChiContextInternalIpContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-            ChiContextInternalIpContextItem::class.java\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m            HeaderNames.INTERNAL_IP_HEADER,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m            SimpleHeaderContextItem::class.java\u001b[m\u001b[m\r\n         )\u001b[m\u001b[m\r\n\u001b[31m-            .map { internal: ChiContextInternalIpContextItem -> \"1\" == internal.value() }\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m            .map { internal: SimpleHeaderContextItem -> \"1\" == internal.value() }\u001b[m\u001b[m\r\n             .orElse(false)\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         @JvmStatic\u001b[m\u001b[m\r\n         fun getDevice() = RequestContextContainer.get(\u001b[m\u001b[m\r\n\u001b[31m-            ChiContextDeviceClassContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-            ChiContextDeviceClassContextItem::class.java\u001b[m\u001b[m\r\n\u001b[32"]
[24.563140000000004, "o", "m+\u001b[m\u001b[32m            HeaderNames.DEVICE_CLASS_HEADER,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m            SimpleHeaderContextItem::class.java\u001b[m\u001b[m\r\n         )\u001b[m\u001b[m\r\n\u001b[31m-            .map { obj: ChiContextDeviceClassContextItem -> obj.value() }\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m            .map { obj: SimpleHeaderContextItem -> obj.value() }\u001b[m\u001b[m\r\n             .orElse(\"desktop\")\u001b[m\u001b[m\r\n             .lowercase(Locale.getDefault())\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         @JvmStatic\u001b[m\u001b[m\r\n         fun getCmuId(): String? = RequestContextContainer.get(\u001b[m\u001b[m\r\n\u001b[31m-            ChiContextCmuIdContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-            ChiContextCmuIdContextItem::class.java\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m            HeaderNames.CMUID_HEADER,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m            SimpleHeaderContextItem::class.java\u001b[m\u001b[m\r\n         )\u001b[m\u001b[m\r\n\u001b[31m-            .map { obj: ChiContextCmuIdContextItem -> obj.value() }\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m            .map { obj: SimpleHeaderContextItem -> obj.value() }\u001b[m\u001b[m\r\n             .orElse(null)\u001b[m\u001b[m\r\n     }\u001b[m\u001b[m\r\n }\u001b[m\u001b[m\r\n\u001b[1mdiff --"]
[24.563394000000002, "o", "git a/core/src/main/java/pl/allegro/o"]
[24.563560999999993, "o", "pbox/core/util/context/UserInternalContextItemValidator.kt b/core/src/main/java/pl/al\u001b[m \b\u001b[1mlegro/opbox/core/util/context/UserInternalContextItemValidator.kt\u001b[m\u001b[m\r\n\u001b[1mindex 3f331932d..b37f853cc 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/java/pl/allegro/opbox/core/util/context/UserInternalContextItemValidator.kt\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/java/pl/allegro/opbox/core/util/context/UserInternalContextItemValidator.kt\u001b[m\u001b[m\r\n\u001b[36m@@ -1,10 +1,11 @@\u001b[m\u001b[m\r\n package pl.allegro.opbox.core.util.context\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n import io.micrometer.core.instrument.MeterRegistry\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextInternalIpContextItem\u001b[m\u001b[m\r\n:\u001b[K"]
[25.230671, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[25.230867000000003, "o", "\u001b[K~\b~\r\u001b[K\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.HeaderNames\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n class UserInternalContextItemValidator(meterRegistry: MeterRegistry) :\u001b[m\u001b[m\r\n\u001b[31m-    HeaderWithQueryFallbackContextItemValidator<ChiContextInternalIpContextItem>(meterRegistry) {\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    HeaderWithQueryFallbackContextItemValidator<SimpleHeaderContextItem>(meterRegistry) {\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n     override fun getQueryParameterName() = \"userInternal\"\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -12,7 +13,7 @@\u001b[m \u001b[mclass UserInternalContextItemValidator(meterRegistry: MeterRegistry) :\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n     override fun getMetricName() = \"user-internal\"\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[31m-    override fun getContextItemName() = ChiContextInternalIpContextItem.NAME\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    override fun getContextItemName() = HeaderNames.INTERNAL_IP_HEADER\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[31m-    override fun getContextItemClass("]
[25.231039999999993, "o", ") = ChiContextInternalIpC"]
[25.231228, "o", "ontextItem::class.java\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    override fun getContextItemClass() = SimpleHeaderContextItem::class.java\u001b[m\u001b[m\r\n }\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/resources/application-canary.yml b/core/src/main/resources/application-canary.yml\u001b[m\u001b[m\r\n\u001b[1mindex 02968497c..df6a2edcd 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/resources/application-canary.yml\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/resources/application-canary.yml\u001b[m\u001b[m\r\n\u001b[36m@@ -1,2 +1,3 @@\u001b[m\u001b[m\r\n\u001b[31m-metrics:\u001b[m\u001b[m\r\n\u001b[31m-  serviceNameSuffix: \"canary\"\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mandamio:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  metrics:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    service-name-suffix: \"canary\"\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/resources/application-canary0.yml b/core/src/main/resources/application-canary0.yml\u001b[m\u001b[m\r\n\u001b[1mindex aedab2d5f..f02734901 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/resources/application-canary0.yml\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/resources/application-canary0.yml\u001b[m\u001b[m\r\n"]
[25.231374000000002, "o", "\u001b[36m@@ -1,5 +1,6 @@\u001b[m\u001b[m\r\n\u001b[31m-metrics:\u001b[m\u001b[m\r\n\u001b[31m-  serviceNameSuffix: \"canary0\"\u001b[m\u001b[m\r\n\u001b[31m-logging:\u001b[m\u001b[m\r\n\u001b[31m-  http:\u001b[m\u001b[m\r\n\u001b[31m-    enabled: true\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mandamio:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  logging:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    http:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m      enabled: true\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  metrics:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    service-name-suffix: \"canary0\"\u001b[m\u001b[m\r\n\\ No newline at end of file\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/resources/application-integration.yml b/core/src/main/resources/application-integration.yml\u001b[m\u001b[m\r\n\u001b[1mindex d67ae73b4..e5006bde7 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/resources/application-integration.yml\u001b[m\u001b[m\r\n:\u001b[K"]
[25.942819999999998, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[25.943021, "o", "\u001b[K~\b~\r\u001b[K"]
[25.943204999999992, "o", "\u001b[1m+++ b/core/src/main/resources/application-integration.yml\u001b[m\u001b[m\r\n\u001b[36m@@ -1,7 +1,3 @@\u001b[m\u001b[m\r\n\u001b[31m-metadata:\u001b[m\u001b[m\r\n\u001b[31m-  cloud:\u001b[m\u001b[m\r\n\u001b[31m-    reading: skip\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n prototypes:\u001b[m\u001b[m\r\n   liveReloadingEnabled: false\u001b[m\u001b[m\r\n   numberOfRepositories: 1\u001b[m\u001b[m\r\n\u001b[36m@@ -46,12 +42,6 @@\u001b[m \u001b[manonymisation:\u001b[m\u001b[m\r\n     - allegro.pl/withUserData\u001b[m\u001b[m\r\n   cacheTime: 99s\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[31m-discovery:\u001b[m\u001b[m\r\n\u001b[31m-  enabled: false\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n\u001b[31m-proxy:\u001b[m\u001b[m\r\n\u001b[31m-  enabled: false\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n warmup:\u001b[m\u001b[m\r\n   enabled: false\u001b[m\u001b[m\r\n   cache:\u001b[m\u001b[m\r\n\u001b[36m@@ -94,3 +84,9 @@\u001b[m \u001b[mplugins:\u001b[m\u001b[m\r\n     env: dev\u001b[m\u001b[m\r\n   gdpr:\u001b[m\u001b[m\r\n     url: http://localhost:${wiremock.server.port}/varnish/opbox-gdpr-consents-version/version.json?service-tag=cluster:fivestore\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mandamio:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  discovery:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    enabled: false\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  proxy:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    enabled: false\u001b[m\u001b[m\r\n\\ No newline at end of f"]
[25.943331, "o", "ile\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/resources/application-local.yml b/core/src/main/resources/application-local.yml\u001b[m\u001b[m\r\n\u001b[1mindex dcb716733..ffd2aa094 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/resources/application-local.yml\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/resources/application-local.yml\u001b[m\u001b[m\r\n\u001b[36m@@ -18,22 +18,6 @@\u001b[m \u001b[mcache:\u001b[m\u001b[m\r\n warmup:\u001b[m\u001b[m\r\n   enabled: false\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[31m-metadata:\u001b[m\u001b[m\r\n\u001b[31m-  cloud:\u001b[m\u001b[m\r\n\u001b[31m-    reading: skip\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n\u001b[31m-discovery:\u001b[m\u001b[m\r\n\u001b[31m-  consul:\u001b[m\u001b[m\r\n\u001b[31m-    host: consul-dev.qxlint\u001b[m\u001b[m\r\n\u001b[31m-    port: 80\u001b[m\u001b[m\r\n:\u001b[K"]
[26.614991000000003, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[26.615326999999994, "o", "\u001b[K~\b~\r\u001b[K\u001b[31m-    service-cache-refresh-seconds: 10\u001b[m\u001b[m\r\n\u001b[31m-  enabled: false\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n\u001b[31m-proxy:\u001b[m\u001b[m\r\n\u001b[31m-  enabled: true\u001b[m\u001b[m\r\n\u001b[31m-  host: local-development-proxy-dev.allegrogroup.com\u001b[m\u001b[m\r\n\u001b[31m-  port: 6002\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n bdl:\u001b[m\u001b[m\r\n   versions:\u001b[m\u001b[m\r\n     imagePins: \"1.0\"\u001b[m\u001b[m\r\n\u001b[36m@@ -58,7 +42,6 @@\u001b[m \u001b[mrender-response-cache:\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n #pageManager:\u001b[m\u001b[m\r\n #  address: http://localhost:8080\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n #for local development only\u001b[m\u001b[m\r\n refresher:\u001b[m\u001b[m\r\n   filterRoutes:\u001b[m\u001b[m\r\n\u001b[36m@@ -87,3 +70,15 @@\u001b[m \u001b[mplugins:\u001b[m\u001b[m\r\n     kibanaUrl: https://web.logger-dev.qxlint/app/kibana#/dashboard/fecce050-d13d-11e8-ae84-cf7601c766b2\u001b[m\u001b[m\r\n     sergeServiceHost: https://serge-service-dev.allegrogroup.com\u001b[m\u001b[m\r\n     ventoHost: https://vento.allegrogroup.com\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mandamio:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  discovery:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    consul:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m      host: consul-dev.qxlint\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m      port: 80\u001b["]
[26.615470000000002, "o", "m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m      service-cache-refresh-seconds: 10\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    enabled: false\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  proxy:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    enabled: true\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    host: local-development-proxy-dev.allegrogroup.com\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    port: 6002\u001b[m\u001b[m\r\n\\ No newline at end of file\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/resources/application-prod.yml b/core/src/main/resources/application-prod.yml\u001b[m\u001b[m\r\n\u001b[1mindex 2d1d54683..347f971b7 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/resources/application-prod.yml\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/resources/application-prod.yml\u001b[m\u001b[m\r\n\u001b[36m@@ -3,12 +3,6 @@\u001b[m \u001b[mserver:\u001b[m\u001b[m\r\n     whitelabel:\u001b[m\u001b[m\r\n       enabled: false\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[31m-trace:\u001b[m\u001b[m\r\n\u001b[31m-  generate: true\u001b[m\u001b[m\r\n\u001b[31m-  reporter:\u001b[m\u001b[m\r\n\u001b[31m-    logging:\u001b[m\u001b[m\r\n\u001b[31m-      enabled: true\u001b[m\u001b[m\r\n:\u001b[K"]
[27.27942399999999, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6\u001b[K~\b~\r\u001b[K"]
[27.279556, "o", "\u001b[31m-\u001b[m\u001b[m\r\n http-client:\u001b[m\u001b[m\r\n   connection-request-timeout: 100ms\u001b[m\u001b[m\r\n   connect-timeout: 100ms\u001b[m\u001b[m\r\n\u001b[36m@@ -27,3 +21,10 @@\u001b[m \u001b[mplugins:\u001b[m\u001b[m\r\n     kibanaUrl: https://web.logger.qxlint/app/kibana#/dashboard/fecce050-d13d-11e8-ae84-cf7601c766b2\u001b[m\u001b[m\r\n     sergeServiceHost: https://serge-service.allegrogroup.com\u001b[m\u001b[m\r\n     ventoHost: https://vento.allegrogroup.com\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mandamio:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  trace:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    generate: true\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    reporter:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m      logging:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        enabled: true\u001b[m\u001b[m\r\n\\ No newline at end of file\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/resources/application-test.yml b/core/src/main/resources/application-test.yml\u001b[m\u001b[m\r\n\u001b[1mindex d958827f4..8b5a95b59 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/resources/application-test.yml\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/resources/application-test.yml\u001b[m\u001b[m\r\n\u001b[36m@@ -1,9 +1,3 @@\u001b[m\u001b[m\r\n\u001b[31m-trace:\u001b[m\u001b[m\r\n\u001b[31m-  generate: true\u001b[m\u001b[m\r\n\u001b[31m-  r"]
[27.279617000000002, "o", "eporter:\u001b[m\u001b[m\r\n\u001b[31m- "]
[27.279719999999998, "o", "   logging:\u001b[m\u001b[m\r\n\u001b[31m-      enabled: true\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n session:\u001b[m\u001b[m\r\n   serviceUrl: \"service://session-service/sessions/{sessionId}/auth\"\u001b[m\u001b[m\r\n   serviceTimeout: 200ms\u001b[m\u001b[m\r\n\u001b[36m@@ -20,3 +14,10 @@\u001b[m \u001b[mplugins:\u001b[m\u001b[m\r\n     kibanaUrl: https://web.logger-test.qxlint/app/kibana#/dashboard/fecce050-d13d-11e8-ae84-cf7601c766b2\u001b[m\u001b[m\r\n     sergeServiceHost: https://serge-service-test.allegrogroup.com\u001b[m\u001b[m\r\n     ventoHost: https://vento.allegrogroup.com\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mandamio:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  trace:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    generate: true\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    reporter:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m      logging:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        enabled: true\u001b[m\u001b[m\r\n\\ No newline at end of file\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/resources/application.yml b/core/src/main/resources/application.yml\u001b[m\u001b[m\r\n\u001b[1mindex 76e242aa7..ae5939b1b 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/resources/application.yml\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/resources/application.yml\u001b[m\u001b[m\r\n\u001b[36m@@ -1,12 +1,6"]
[27.279759999999996, "o", " @@\u001b[m\u001b[m\r\n db:\u001b[m\u001b[m\r\n   schemaVersion: 47\u001b[m\u001b[m\r\n:\u001b[K"]
[27.926220999999998, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[27.926282999999998, "o", "\u001b[K~\b~\r\u001b[K"]
[27.926536, "o", " \u001b[m\u001b[m\r\n\u001b[31m-discovery:\u001b[m\u001b[m\r\n\u001b[31m-  enabled: true\u001b[m\u001b[m\r\n\u001b[31m-  type: consul\u001b[m\u001b[m\r\n\u001b[31m-  consul:\u001b[m\u001b[m\r\n\u001b[31m-    clientType: JACKSON_STREAMING\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n http-client:\u001b[m\u001b[m\r\n   connection-request-timeout: 1s\u001b[m\u001b[m\r\n   connect-timeout: 1s\u001b[m\u001b[m\r\n\u001b[36m@@ -21,7 +15,6 @@\u001b[m \u001b[mserver:\u001b[m\u001b[m\r\n     threads:\u001b[m\u001b[m\r\n       worker: 16\u001b[m\u001b[m\r\n       io: 4\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n   opbox:\u001b[m\u001b[m\r\n     worker-threads: 4\u001b[m\u001b[m\r\n     worker-threads-max-queue-size: 2000\u001b[m\u001b[m\r\n\u001b[36m@@ -97,10 +90,6 @@\u001b[m \u001b[mcache:\u001b[m\u001b[m\r\n     popular-routes:\u001b[m\u001b[m\r\n       ttl: 3m\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[31m-i18n:\u001b[m\u001b[m\r\n\u001b[31m-  enabled: false\u001b[m\u001b[m\r\n\u001b[31m-  cascade: false\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n warmup:\u001b[m\u001b[m\r\n   totalTimeout: 20s\u001b[m\u001b[m\r\n   iterationTimeout: 5s\u001b[m\u001b[m\r\n\u001b[36m@@ -129,10 +118,6 @@\u001b[m \u001b[mopel:\u001b[m\u001b[m\r\n   cache:\u001b[m\u001b[m\r\n     size: 1500\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[31m-metrics:\u001b[m\u001b[m\r\n\u001b[31m-  prometheus:\u001b[m\u001b[m\r\n\u001b[31m-    enabled: true\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n environment:\u001b[m\u001b[m\r\n   latencyFactorMultiplier: 1\u001b[m\u001b[m\r\n   isDebugEnabled: fal"]
[27.926772, "o", "se\u001b[m\u001b[m\r\n\u001b[36m@@ -166,3 +151,16 @@\u001b[m "]
[27.926858999999993, "o", "\u001b[msubtree-with-parameters-propagation:\u001b[m\u001b[m\r\n seo:\u001b[m\u001b[m\r\n   serviceUrl: http://seo-metaverse/api/page-metadata\u001b[m\u001b[m\r\n   timeout: 20ms\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mandamio:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  discovery:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    consul:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m      client-type: JACKSON_STREAMING\u001b[m\u001b[m\r\n:\u001b[K"]
[28.394385, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6\u001b[K~\b~\r\u001b[K"]
[28.394679999999994, "o", "\u001b[32m+\u001b[m\u001b[32m    enabled: true\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    type: consul\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  i18n:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    cascade: false\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    enabled: false\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m  metrics:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m    prometheus:\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m      enabled: true\u001b[m\u001b[m\r\n\\ No newline at end of file\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/main/resources/bootstrap.yml b/core/src/main/resources/bootstrap.yml\u001b[m\u001b[m\r\n\u001b[1mindex fea028e0b..53b4c4999 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/main/resources/bootstrap.yml\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/main/resources/bootstrap.yml\u001b[m\u001b[m\r\n\u001b[36m@@ -2,11 +2,6 @@\u001b[m \u001b[mapplication:\u001b[m\u001b[m\r\n   name: opbox-core\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n metadata:\u001b[m\u001b[m\r\n\u001b[31m-  implementation:\u001b[m\u001b[m\r\n\u001b[31m-    reading: skip\u001b[m\u001b[m\r\n\u001b[31m-  cloud:\u001b[m\u001b[m\r\n\u001b[31m-    reading: skip\u001b[m\u001b[m\r\n\u001b[31m-\u001b[m\u001b[m\r\n   spring:\u001b[m\u001b[m\r\n     cloud:\u001b[m\u001b[m\r\n       config:\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/DeviceFunctionSpec.groovy b/core/src/test/gro\u001b[m \b\u001b[1movy/"]
[28.394773999999998, "o", "pl/allegro/opbox/core/domain/parameter/expression/DeviceFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[1mindex 82a5d0c08..5970d9dc7 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/DeviceFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/DeviceFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[36m@@ -1,15 +1,15 @@\u001b[m\u001b[m\r\n package pl.allegro.opbox.core.domain.parameter.expression\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n"]
[28.395132000000004, "o", " import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextDeviceClassContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n import spock.lang.Specification\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n class DeviceFunctionSpec extends Specification {\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n     def \"should return user's device\"() {\u001b[m\u001b[m\r\n         given:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextDeviceClassContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-                new ChiContextDeviceClassContextItem.Factory().create(\"Tablet\"))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                new ChiContextDeviceClassContextItem(\"Tablet\"))\u001b[m\u001b[m\r\n         def function = new DeviceFunction()\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         expect:\u001b[m\u001b[m\r\n:\u001b[K"]
[29.150406000000004, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6\u001b[K~\b~\r\u001b[K\u001b[36m@@ -18,8 +18,8 @@\u001b[m \u001b[mclass DeviceFunctionSpec extends Specification {\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n     def \"should return desktop as a fallback when the value is null\"() {\u001b[m\u001b[m\r\n         given:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextDeviceClassContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-                new ChiContextDeviceClassContextItem.Factory().create(null))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                new ChiContextDeviceClassContextItem(null))\u001b[m\u001b[m\r\n         def function = new DeviceFunction()\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         expect:\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/IsInternalFunctionSpec.groovy b/core/src/test\u001b[m \b\u001b[1m/groovy/pl/allegro/opbox/core/domain/parameter/expression/IsInternalFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[1mindex b2e8793cb..040c38e4f 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expr"]
[29.151308, "o", "ession/IsInternalFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/IsInternalFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[36m@@ -1,7 +1,7 @@\u001b[m\u001b[m\r\n package pl.allegro.opbox.core.domain.parameter.expression\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextInternalIpContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n import spock.lang.Specification\u001b[m\u001b[m\r\n import spock.lang.Unroll\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -10,8 +10,8 @@\u001b[m \u001b[mclass IsInternalFunctionSpec extends Specification {\u001b[m\u001b[m\r\n     @Unroll\u001b[m\u001b[m\r\n     def 'should return isInternal flag from RequestContext when isInternal is #isInternal'() {\u001b[m\u001b[m\r\n         given:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextInternalIpContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-                new ChiContextInternalIpContextItem.Factor"]
[29.15141, "o", "y().create(isInternal ? '1' : '0'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        Re"]
[29.151736999999997, "o", "questContextContainer.put(SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                new ChiContextInternalIpContextItem(isInternal ? '1' : '0'))\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         when:\u001b[m\u001b[m\r\n         def function = new IsInternalFunction()\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/IsRwdFunctionSpec.groovy b/core/src/test/groo\u001b[m \b\u001b[1mvy/pl/allegro/opbox/core/domain/parameter/expression/IsRwdFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[1mindex 0580b241a..389be0475 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/IsRwdFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/IsRwdFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[36m@@ -1,7 +1,7 @@\u001b[m\u001b[m\r\n package pl.allegro.opbox.core.domain.parameter.expression\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextDeviceClassContextIt"]
[29.151988000000003, "o", "em\u001b[m\u001b[m\r\n\u001b[3"]
[29.152095000000003, "o", "2m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n import spock.lang.Specification\u001b[m\u001b[m\r\n import spock.lang.Unroll\u001b[m\u001b[m\r\n:\u001b[K"]
[29.656685999999993, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6\u001b[K~\b~\r\u001b[K"]
[29.656926, "o", " \u001b[m\u001b[m\r\n\u001b[36m@@ -10,7 +10,7 @@\u001b[m \u001b[mclass IsRwdFunctionSpec extends Specification {\u001b[m\u001b[m\r\n     @Unroll\u001b[m\u001b[m\r\n     def 'value should be #isRwd when deviceClass is #deviceClass'() {\u001b[m\u001b[m\r\n         given:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextDeviceClassContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n                 new ChiContextDeviceClassContextItem.Factory().create(deviceClass))\u001b[m\u001b[m\r\n         def function = new IsRwdFunction()\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -30,7 +30,7 @@\u001b[m \u001b[mclass IsRwdFunctionSpec extends Specification {\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n     def \"value should be null when deviceClass is missing\"() {\u001b[m\u001b[m\r\n         given:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.remove(ChiContextDeviceClassContextItem.NAME)\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.remove(SimpleHeaderContextItem.NAME)\u001b[m\u001b[m\r\n         def function = new IsRwdFunction()\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         expect:\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/test/"]
[29.657043, "o", "groovy/pl/allegro/"]
[29.657304999999994, "o", "opbox/core/domain/parameter/expression/UserCmIdFunctionSpec.groovy b/core/src/test/g\u001b[m \b\u001b[1mroovy/pl/allegro/opbox/core/domain/parameter/expression/UserCmIdFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[1mindex b66a6c17d..fcba28477 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/UserCmIdFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/test/groovy/pl/allegro/opbox/core/domain/parameter/expression/UserCmIdFunctionSpec.groovy\u001b[m\u001b[m\r\n\u001b[36m@@ -1,7 +1,7 @@\u001b[m\u001b[m\r\n package pl.allegro.opbox.core.domain.parameter.expression\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextCmuIdContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n import spock.lang.Specification\u001b[m\u001b[m\r\n import spock.lang.Unroll\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -11,8 +11,8 @@\u001b[m \u001b[mclass UserCmIdFunctionSpec extends Specification {\u001b[m\u001b[m\r\n \u001b[m\u001b"]
[29.65744099999999, "o", "[m\r\n     def \"should return userCmId\"() {\u001b[m\u001b[m\r\n         given:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-                new ChiContextCmuIdContextItem.Factory().create('anUserCmId'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                new ChiContextCmuIdContextItem('anUserCmId'))\u001b[m\u001b[m\r\n         def function = new UserCmIdFunction()\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         expect:\u001b[m\u001b[m\r\n\u001b[36m@@ -21,8 +21,8 @@\u001b[m \u001b[mclass UserCmIdFunctionSpec extends Specification {\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n     def \"should return null for empty userCmId\"() {\u001b[m\u001b[m\r\n         given:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME,\u001b[m\u001b[m\r\n:\u001b[K"]
[30.164227999999994, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[30.164299999999997, "o", "\u001b[K~\b~\r\u001b[K"]
[30.164480999999995, "o", "\u001b[31m-                new ChiContextCmuIdContextItem.Factory().create(null))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                new ChiContextCmuIdContextItem(null))\u001b[m\u001b[m\r\n         def function = new UserCmIdFunction()\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         expect:\u001b[m\u001b[m\r\n\u001b[36m@@ -32,8 +32,8 @@\u001b[m \u001b[mclass UserCmIdFunctionSpec extends Specification {\u001b[m\u001b[m\r\n     @Unroll\u001b[m\u001b[m\r\n     def 'should throw exception when number of given arguments is invalid'() {\u001b[m\u001b[m\r\n         given:\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-                new ChiContextCmuIdContextItem.Factory().create('anUserCmId'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                new ChiContextCmuIdContextItem('anUserCmId'))\u001b[m\u001b[m\r\n         def function = new UserCmIdFunction()\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n         when:\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/test/groovy/pl/alle"]
[30.164618000000004, "o", "gro/opbox/core/d"]
[30.164796999999993, "o", "omain/render/RenderingTestUtils.groovy b/core/src/test/groovy/pl/allegro\u001b[m \b\u001b[1m/opbox/core/domain/render/RenderingTestUtils.groovy\u001b[m\u001b[m\r\n\u001b[1mindex eb5836399..1d944d9f6 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/test/groovy/pl/allegro/opbox/core/domain/render/RenderingTestUtils.groovy\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/test/groovy/pl/allegro/opbox/core/domain/render/RenderingTestUtils.groovy\u001b[m\u001b[m\r\n\u001b[36m@@ -11,9 +11,7 @@\u001b[m \u001b[mimport pl.allegro.opbox.core.infrastructure.user.authentication.token.UserTokenD\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.util.result.Result\u001b[m\u001b[m\r\n import pl.allegro.opbox.core.util.test.TestClock\u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n"]
[30.164919999999995, "o", "\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextCmuIdContextItem\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextInternalIpContextItem\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextOverrideContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n import static java.util.concurrent.CompletableFuture.completedFuture\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -93,12 +91,12 @@\u001b[m \u001b[mclass RenderingTestUtils {\u001b[m\u001b[m\r\n             String chiProps = null,\u001b[m\u001b[m\r\n             boolean internal = false\u001b[m\u001b[m\r\n     ) {\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextCmuIdContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-                new ChiContextCmuIdContextItem.Factory().create(userCmId))\u001b[m\u001b[m\r\n\u001b[31m-        RequestContextContainer.put(ChiContextOverrideContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-                new ChiContextOverrideContextItem.Factory().create(chiProps))\u001b[m"]
[30.16501699999999, "o", "\u001b[m\r\n\u001b[31m-   "]
[30.165126, "o", "     RequestContextContainer.put(ChiContextInternalIpContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[31m-                new ChiContextInternalIpContextItem.Factory().create(internal ? '1' : '0'))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                new ChiContextCmuIdContextItem(userCmId))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                new ChiContextOverrideContextItem(chiProps))\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m        RequestContextContainer.put(SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                new ChiContextInternalIpContextItem(internal ? '1' : '0'))\u001b[m\u001b[m\r\n:\u001b[K"]
[30.872534, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b["]
[30.872575999999995, "o", "\u001b[K6\b6\u001b[K~\b~\r\u001b[K"]
[30.872708000000003, "o", " \u001b[m\u001b[m\r\n         def experimentVariants = [\u001b[m\u001b[m\r\n                 getUserExperimentVariant      : { eId, userInfo -> completedFuture(Optional.empty()) },\u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/test/groovy/pl/allegro/opbox/core/util/context/CmuIdContextItemValidatorSpec.groovy b/core/src/test/groovy/\u001b[m \b\u001b[1mpl/allegro/opbox/core/util/context/CmuIdContextItemValidatorSpec.groovy\u001b[m\u001b[m\r\n\u001b[1mindex 659d7c8c1..0b21bfbd6 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/test/groovy/pl/allegro/opbox/core/util/context/CmuIdContextItemValidatorSpec.groovy\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/test/groovy/pl/allegro/opbox/core/util/context/CmuIdContextItemValidatorSpec.groovy\u001b[m\u001b[m\r\n\u001b[36m@@ -4,7 +4,7 @@\u001b[m \u001b[mimport io.micrometer.core.instrument.Tags\u001b[m\u001b[m\r\n import io.micrometer.core.instrument.simple.SimpleMeterRegistry\u001b[m\u001b[m\r\n import org.springframework.mock.web.MockHttpServletRequest\u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextCmuI"]
[30.872793, "o", "dContextIt"]
[30.872936999999993, "o", "em\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n import spock.lang.Specification\u001b[m\u001b[m\r\n import spock.lang.Unroll\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -24,7 +24,7 @@\u001b[m \u001b[mclass CmuIdContextItemValidatorSpec extends Specification {\u001b[m\u001b[m\r\n         if (queryValue != null) servletRequest.queryString = \"userCmId=$queryValue\"\u001b[m\u001b[m\r\n         if (contextValue != null)\u001b[m\u001b[m\r\n             RequestContextContainer.put(\u001b[m\u001b[m\r\n\u001b[31m-                    ChiContextCmuIdContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                    SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n                     new ChiContextCmuIdContextItem.Factory().create(contextValue)\u001b[m\u001b[m\r\n             )\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -52,7 +52,7 @@\u001b[m \u001b[mclass CmuIdContextItemValidatorSpec extends Specification {\u001b[m\u001b[m\r\n         if (queryValue != null) servletRequest.queryString = \"userCmId=$queryValue\"\u001b[m\u001b[m\r\n         if (contextValue != null)\u001b[m\u001b[m\r\n             RequestContextContainer.put(\u001b[m\u001b[m\r\n\u001b[31m-   "]
[30.873058, "o", "                 ChiContextCmuIdContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                    SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n                     new ChiContextCmuIdContextItem.Factory().create(contextValue)\u001b[m\u001b[m\r\n             )\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/test/groovy/pl/allegro/opbox/core/util/context/DeviceClassContextItemValidatorSpec.groovy b/core/src/test/g\u001b[m \b\u001b[1mroovy/pl/allegro/opbox/core/util/context/DeviceClassContextItemValidatorSpec.groovy\u001b[m\u001b[m\r\n\u001b[1mindex af7b25d32..4d9d3d460 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/test/groovy/pl/allegro/opbox/core/util/context/DeviceClassContextItemValidatorSpec.groovy\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/test/groovy/pl/allegro/opbox/core/util/context/DeviceClassContextItemValidatorSpec.groovy\u001b[m\u001b[m\r\n\u001b[36m@@ -4,7 +4,7 @@\u001b[m \u001b[mimport io.micrometer.core.instrument.Tags\u001b[m\u001b[m\r\n import io.micrometer.core.instrument.simple.SimpleMeterRegistry\u001b[m\u001b[m\r\n import org.springframework.mock.web.MockHttpServletRequest\u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.Req"]
[30.873132999999996, "o", "uestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextDeviceClassContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.common.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n import spock.lang.Specification\u001b[m\u001b[m\r\n import spock.lang.Unroll\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n:\u001b[K"]
[31.467405999999997, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b["]
[31.46761099999999, "o", "\u001b[K6\b6\u001b[K~\b~\r\u001b[K"]
[31.467754999999997, "o", "\u001b[36m@@ -26,7 +26,7 @@\u001b[m \u001b[mclass DeviceClassContextItemValidatorSpec extends Specification {\u001b[m\u001b[m\r\n         if (queryValue != null) servletRequest.queryString = \"uaDevice=$queryValue\"\u001b[m\u001b[m\r\n         if (contextValue != null)\u001b[m\u001b[m\r\n             RequestContextContainer.put(\u001b[m\u001b[m\r\n\u001b[31m-                    ChiContextDeviceClassContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                    SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n                     new ChiContextDeviceClassContextItem.Factory().create(contextValue)\u001b[m\u001b[m\r\n             )\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -56,7 +56,7 @@\u001b[m \u001b[mclass DeviceClassContextItemValidatorSpec extends Specification {\u001b[m\u001b[m\r\n         if (queryValue != null) servletRequest.queryString = \"uaDevice=$queryValue\"\u001b[m\u001b[m\r\n         if (contextValue != null)\u001b[m\u001b[m\r\n             RequestContextContainer.put(\u001b[m\u001b[m\r\n\u001b[31m-                    ChiContextDeviceClassContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                    SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n                     new ChiContextDevice"]
[31.46795999999999, "o", "ClassContextIt"]
[31.468227999999996, "o", "em.Factory().create(contextValue)\u001b[m\u001b[m\r\n             )\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[1mdiff --git a/core/src/test/groovy/pl/allegro/opbox/core/util/context/UserInternalContextItemValidatorSpec.groovy b/core/src/test/\u001b[m \b\u001b[1mgroovy/pl/allegro/opbox/core/util/context/UserInternalContextItemValidatorSpec.groovy\u001b[m\u001b[m\r\n\u001b[1mindex 9facdfc10..676dfa026 100644\u001b[m\u001b[m\r\n\u001b[1m--- a/core/src/test/groovy/pl/allegro/opbox/core/util/context/UserInternalContextItemValidatorSpec.groovy\u001b[m\u001b[m\r\n\u001b[1m+++ b/core/src/test/groovy/pl/allegro/opbox/core/util/context/UserInternalContextItemValidatorSpec.groovy\u001b[m\u001b[m\r\n\u001b[36m@@ -4,7 +4,7 @@\u001b[m \u001b[mimport io.micrometer.core.instrument.Tags\u001b[m\u001b[m\r\n import io.micrometer.core.instrument.simple.SimpleMeterRegistry\u001b[m\u001b[m\r\n import org.springframework.mock.web.MockHttpServletRequest\u001b[m\u001b[m\r\n import pl.allegro.tech.common.andamio.request.RequestContextContainer\u001b[m\u001b[m\r\n\u001b[31m-import pl.allegro.tech.common.andamio.spring.core.chicontext.ChiContextInternalIpContextItem\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32mimport pl.allegro.tech.co"]
[31.468380999999994, "o", "mmon.andamio.spring.core.propagation.SimpleHeaderContextItem\u001b[m\u001b[m\r\n import spock.lang.Specification\u001b[m\u001b[m\r\n import spock.lang.Unroll\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -24,7 +24,7 @@\u001b[m \u001b[mclass UserInternalContextItemValidatorSpec extends Specification {\u001b[m\u001b[m\r\n         if (queryValue != null) servletRequest.queryString = \"userInternal=$queryValue\"\u001b[m\u001b[m\r\n         if (contextValue != null)\u001b[m\u001b[m\r\n             RequestContextContainer.put(\u001b[m\u001b[m\r\n\u001b[31m-                    ChiContextInternalIpContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                    SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n                     new ChiContextInternalIpContextItem.Factory().create(contextValue)\u001b[m\u001b[m\r\n             )\u001b[m\u001b[m\r\n \u001b[m\u001b[m\r\n\u001b[36m@@ -52,7 +52,7 @@\u001b[m \u001b[mclass UserInternalContextItemValidatorSpec extends Specification {\u001b[m\u001b[m\r\n         if (queryValue != null) servletRequest.queryString = \"userInternal=$queryValue\"\u001b[m\u001b[m\r\n         if (contextValue != null)\u001b[m\u001b[m\r\n             RequestContextContainer.put(\u001b[m\u001b[m\r\n\u001b[31m-                    "]
[31.468470999999994, "o", "ChiContextInternalIpContextItem.NAME,\u001b[m\u001b[m\r\n\u001b[32m+\u001b[m\u001b[32m                    SimpleHeaderContextItem.NAME,\u001b[m\u001b[m\r\n                     new ChiContextInternalIpContextItem.Factory().create(contextValue)\u001b[m\u001b[m\r\n             )\u001b[m\u001b[m\r\n:\u001b[K"]
[32.10822, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b["]
[32.108462, "o", "\u001b[K6\b6\u001b[K~\b~\r\u001b[K \u001b[m\u001b[m\r\n\u001b[1mdiff --git a/project.properties b/project.properties\u001b[m\u001b[m\r\n\u001b[1mdeleted file mode 100644\u001b[m\u001b[m\r\n\u001b[1mindex d6e2b89bd..000000000\u001b[m\u001b[m\r\n\u001b[1m--- a/project.properties\u001b[m\u001b[m\r\n\u001b[1m+++ /dev/null\u001b[m\u001b[m\r\n\u001b[36m@@ -1,11 +0,0 @@\u001b[m\u001b[m\r\n\u001b[31m-domain=opbox\u001b[m\u001b[m\r\n\u001b[31m-context=core\u001b[m\u001b[m\r\n"]
[32.108677, "o", "\u001b[31m-description=opbox core service\u001b[m\u001b[m\r\n\u001b[31m-team=opbox-platform\u001b[m\u001b[m\r\n\u001b[31m-business-owner=Opbox Platform <opbox-platform@allegro.pl>\u001b[m\u001b[m\r\n\u001b[31m-technical-owner=Opbox Platform <opbox-platform@allegro.pl>\u001b[m\u001b[m\r\n\u001b[31m-ci-url=https://github.com/allegro-internal/opbox-core/actions\u001b[m\u001b[m\r\n\u001b[31m-bugtracker-url=https://jira.allegrogroup.com/browse/OPBOX\u001b[m\u001b[m\r\n\u001b[31m-type=service\u001b[m\u001b[m\r\n\u001b[31m-documentation-url=\u001b[m\u001b[m\r\n\u001b[31m-vendor=Allegro Group\u001b[m\u001b[m\r\n\u001b[7m(END)\u001b[27m\u001b[K"]
[32.709225, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[K[\b[\u001b[K6\b6"]
[32.709492999999995, "o", "\u001b[K~\b~\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[33.265754, "o", "\r\u001b[K\u001b[?1l\u001b>\u001b[?1049l"]
[33.268005, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                \r \r"]
[33.270381, "o", "\u001b]2;aleksandr.serbin@polpc13015:~/ws/opbox-core\u0007"]
[33.270500999999996, "o", "\u001b]1;~/ws/opbox-core\u0007"]
[33.275299000000004, "o", "\u001b]7;file://polpc13015/Users/aleksandr.serbin/ws/opbox-core\u001b\\"]
[33.281937, "o", "\u001b[1A\u001b[122C /12,9s\r\n"]
[33.283387000000005, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32m➜  \u001b[36mopbox-core\u001b[00m \u001b[01;34mgit:(\u001b[31mmaster\u001b[34m) \u001b[33m✗\u001b[00m "]
[33.28344799999999, "o", "\u001b[K\u001b[88C[10:21:09] \u001b[99D"]
[33.283576999999994, "o", "\u001b[?1h\u001b="]
[33.28364499999999, "o", "\u001b[?2004h"]
[34.28364499999999, "o", "\u001b[?2004l\r\r\n"]
